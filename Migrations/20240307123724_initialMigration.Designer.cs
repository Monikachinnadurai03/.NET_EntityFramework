// <auto-generated />
using System;
using IMS_DBFirst.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IMS_DBFirst.Migrations
{
    [DbContext(typeof(EfRefContext))]
    [Migration("20240307123724_initialMigration")]
    partial class initialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IMS_DBFirst.Models.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_ID");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date")
                        .HasColumnName("Birth_Date");

                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("City_ID");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("First_Name");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Last_Name");

                    b.Property<string>("Occupation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PanCardNo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("PAN_Card_No")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Phone_Number");

                    b.Property<DateOnly?>("RegistrationDate")
                        .HasColumnType("date")
                        .HasColumnName("Registration_Date");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("State_ID");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Street_Name");

                    b.HasKey("ClientId")
                        .HasName("PK__Client__75A5D7181E544345");

                    b.HasIndex("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("IMS_DBFirst.Models.ClientCity", b =>
                {
                    b.Property<int>("CityId")
                        .HasColumnType("int")
                        .HasColumnName("City_ID");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("City_Name");

                    b.HasKey("CityId")
                        .HasName("PK__Client_C__DE9DE020CA906276");

                    b.ToTable("ClientCity", (string)null);
                });

            modelBuilder.Entity("IMS_DBFirst.Models.ClientInvestment", b =>
                {
                    b.Property<int>("ClientInvestmentId")
                        .HasColumnType("int")
                        .HasColumnName("Client_Investment_ID");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("Client_ID");

                    b.Property<decimal?>("InvestmentAmount")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("Investment_Amount");

                    b.Property<DateOnly?>("InvestmentDate")
                        .HasColumnType("date")
                        .HasColumnName("Investment_Date");

                    b.Property<int?>("InvestmentId")
                        .HasColumnType("int")
                        .HasColumnName("Investment_ID");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("Transaction_ID");

                    b.HasKey("ClientInvestmentId")
                        .HasName("PK__Client_I__125BA18A1DBA30AB");

                    b.HasIndex("ClientId");

                    b.HasIndex("InvestmentId");

                    b.ToTable("Client_Investment", (string)null);
                });

            modelBuilder.Entity("IMS_DBFirst.Models.ClientState", b =>
                {
                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("State_ID");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("State_Name");

                    b.HasKey("StateId")
                        .HasName("PK__Client_S__AF9338D7CAE0F43D");

                    b.ToTable("Client_State", (string)null);
                });

            modelBuilder.Entity("IMS_DBFirst.Models.Investment", b =>
                {
                    b.Property<int>("InvestmentId")
                        .HasColumnType("int")
                        .HasColumnName("Investment_ID");

                    b.Property<int>("InvestmentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("Investment_Type_ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("PurchaseDate")
                        .HasColumnType("date")
                        .HasColumnName("Purchase_Date");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("Purchase_Price");

                    b.HasKey("InvestmentId")
                        .HasName("PK__Investme__0C059B9CAEB9C5C3");

                    b.HasIndex("InvestmentTypeId");

                    b.ToTable("Investment", (string)null);
                });

            modelBuilder.Entity("IMS_DBFirst.Models.InvestmentType", b =>
                {
                    b.Property<int>("InvestmentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("Investment_Type_ID");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("InvestmentTypeId")
                        .HasName("PK__Investme__D52DA326AF8A2DE6");

                    b.ToTable("Investment_Type", (string)null);
                });

            modelBuilder.Entity("IMS_DBFirst.Models.TransactionDetail", b =>
                {
                    b.Property<int>("TransactionId")
                        .HasColumnType("int")
                        .HasColumnName("Transaction_ID");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly?>("TransactionDate")
                        .HasColumnType("date")
                        .HasColumnName("Transaction_Date");

                    b.Property<int?>("TransactionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("Transaction_Type_ID");

                    b.HasKey("TransactionId")
                        .HasName("PK__Transact__9A8D562523252D79");

                    b.HasIndex("TransactionTypeId");

                    b.ToTable("Transaction_Detail", (string)null);
                });

            modelBuilder.Entity("IMS_DBFirst.Models.TransactionType", b =>
                {
                    b.Property<int>("TransactionTypeId")
                        .HasColumnType("int")
                        .HasColumnName("Transaction_Type_ID");

                    b.Property<string>("TransactionType1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Transaction_Type");

                    b.HasKey("TransactionTypeId")
                        .HasName("PK__Transact__6E05F51FD881D22D");

                    b.ToTable("Transaction_Type", (string)null);
                });

            modelBuilder.Entity("IMS_DBFirst.Models.Client", b =>
                {
                    b.HasOne("IMS_DBFirst.Models.ClientCity", "City")
                        .WithMany("Clients")
                        .HasForeignKey("CityId")
                        .IsRequired()
                        .HasConstraintName("FK__Client__City_ID__656C112C");

                    b.HasOne("IMS_DBFirst.Models.ClientState", "State")
                        .WithMany("Clients")
                        .HasForeignKey("StateId")
                        .IsRequired()
                        .HasConstraintName("FK__Client__State_ID__66603565");

                    b.Navigation("City");

                    b.Navigation("State");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.ClientInvestment", b =>
                {
                    b.HasOne("IMS_DBFirst.Models.Client", "Client")
                        .WithMany("ClientInvestments")
                        .HasForeignKey("ClientId")
                        .HasConstraintName("FK__Client_In__Clien__0D7A0286");

                    b.HasOne("IMS_DBFirst.Models.Investment", "Investment")
                        .WithMany("ClientInvestments")
                        .HasForeignKey("InvestmentId")
                        .HasConstraintName("FK__Client_In__Inves__0E6E26BF");

                    b.Navigation("Client");

                    b.Navigation("Investment");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.Investment", b =>
                {
                    b.HasOne("IMS_DBFirst.Models.InvestmentType", "InvestmentType")
                        .WithMany("Investments")
                        .HasForeignKey("InvestmentTypeId")
                        .IsRequired()
                        .HasConstraintName("FK__Investmen__Inves__70DDC3D8");

                    b.Navigation("InvestmentType");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.TransactionDetail", b =>
                {
                    b.HasOne("IMS_DBFirst.Models.TransactionType", "TransactionType")
                        .WithMany("TransactionDetails")
                        .HasForeignKey("TransactionTypeId")
                        .HasConstraintName("FK__Transacti__Trans__1332DBDC");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.Client", b =>
                {
                    b.Navigation("ClientInvestments");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.ClientCity", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.ClientState", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.Investment", b =>
                {
                    b.Navigation("ClientInvestments");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.InvestmentType", b =>
                {
                    b.Navigation("Investments");
                });

            modelBuilder.Entity("IMS_DBFirst.Models.TransactionType", b =>
                {
                    b.Navigation("TransactionDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
